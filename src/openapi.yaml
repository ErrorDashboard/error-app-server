openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Error Dashboard Api"
  description: "Error Dashboard"

paths:
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        '200':
          description: OK
        '500':
          description: Server Error
    post:
      tags:
        - users
      summary: Add User
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
        '500':
          description: Server Error
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
        '500':
          description: Server Error
          
  /error-logs:
    post:
      tags:
        - error
      summary: Create a new error log
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateErrorLog'
      responses:
        '201':
          description: Successfully created error log
        '400':
          description: Bad Request
        '500':
          description: Server Error
    get:
      tags:
        - error
      summary: Retrieve all error logs
      responses:
        '200':
          description: Successfully retrieved error logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorLog'
        '500':
          description: Server Error
  /error-logs/{id}:
    get:
      tags:
        - error
      summary: Retrieve error log by ID
      parameters:
        - name: error_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved error log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLog'
        '404':
          description: Error log not found
        '500':
          description: Server Error
    delete:
      tags:
        - error
      summary: Delete error log by ID
      parameters:
        - name: error_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully deleted error log
        '404':
          description: Error log not found
        '500':
          description: Server Error
  /error-logs/filter:
    get:
      tags:
        - error
      summary: Retrieve error logs with filter
      parameters:
        - in: query
          name: statusCode
          schema:
            type: integer
          description: Filter by status code
        - in: query
          name: createdAt
          schema:
            type: string
            format: date
          description: Filter by creation date
        - in: query
          name: resolved
          schema:
            type: boolean
          description: Filter by resolved status
      responses:
        '200':
          description: Successfully retrieved error logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorLog'
        '500':
          description: Server Error

components:
  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: user Email
        password:
          type: string
          description: user Password
    CreateErrorLog:
      type: object
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: integer
          format: int32
          description: HTTP status code of the error
        message:
          type: string
          description: Error message
        component:
          type: object
          required:
            - path
            - line
          properties:
            path:
              type: string
              description: File path of the error
            line:
              type: integer
              format: int32
              description: Line number of the error
        userAffected:
          type: string
          description: User affected by the error
        stackTrace:
          type: string
          description: Stack trace of the error
        resolved:
          type: boolean
          description: Whether the error is resolved or not
    ErrorLog:
      allOf:
        - $ref: '#/components/schemas/CreateErrorLog'
        - type: object
          properties:
            id:
              type: string
              description: Unique identifier of the error log
            createdAt:
              type: string
              format: date-time
              description: Date and time when the error log was created
            updatedAt:
              type: string
              format: date-time
              description: Date and time when the error log was last updated
